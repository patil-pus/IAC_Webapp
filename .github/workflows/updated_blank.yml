name: Node.js CI

on:
  push:
    branches:
      - main

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18

    - name: Install dependencies
      run: npm install

    - name: Display .env file
      run: |
        echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
        echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
        echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
        echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> .env
        echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
        echo "DB_DIALECT=${{ secrets.DB_DIALECT }}" >> .env
        cat .env

    - name: configuremysql
      run: |
        sudo apt-get update
        sudo apt-get install -y curl
        sudo systemctl start mysql
        sudo systemctl status mysql
        mysql -u ${{ secrets.MYSQL_USER }} -p"${{ secrets.MYSQL_PASSWORD }}"

    - name: Zip webapp contents
      run: |
        zip -r webapp.zip ./

    - name: list files
      run: |
        ls -a
        current_directory=$(pwd)

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: v18.17.1

    - name: install the dependencies
      run: npm install

    - name: run the integration
      run: |
        source .env 
        npm test

    - name: Set up Packer
      run: |
          cd packer
          packer init aws-debian.pkr.hcl
          packer build \
            -var 'aws_access_key=${{secrets.AWS_ACCESS_KEY}}' \
            -var 'aws_secret_key=${{secrets.AWS_SECRET_KEY}}' \
            -var 'aws_ami_region=${{secrets.AWS_REGION}}' \
            -var "path=/home/runner/work/IAC_Webapp/IAC_Webapp/Packer" ami.us-east-1.pkr.hcl